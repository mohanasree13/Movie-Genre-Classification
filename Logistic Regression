import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

# Load the dataset
df = pd.read_csv('/kaggle/input/movie-genre-classification/predicted_genres.csv')

# Clean column names
df.columns = df.columns.str.strip().str.lower()

# Use actual column names
plot_col = 'description'
genre_col = 'predicted_genre'

# Drop rows with missing values in description or predicted_genre
df = df.dropna(subset=[plot_col, genre_col])

# Split into train/test sets
X_train, X_test, y_train, y_test = train_test_split(
    df[plot_col], df[genre_col], test_size=0.2, random_state=42)

# TF-IDF Vectorization
tfidf = TfidfVectorizer(max_features=5000, stop_words='english')
X_train_tfidf = tfidf.fit_transform(X_train)
X_test_tfidf = tfidf.transform(X_test)

# Train Logistic Regression model
model = LogisticRegression(max_iter=1000)
model.fit(X_train_tfidf, y_train)

# Predict on test set
y_pred = model.predict(X_test_tfidf)

# Evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))


